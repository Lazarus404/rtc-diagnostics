{"version":3,"file":"MockAnalyserNode.js","sourceRoot":"","sources":["../../../tests/mocks/MockAnalyserNode.ts"],"names":[],"mappings":";AAAA,0BAA0B;;AAE1B;IAOE,0BAAY,OAAiC;QAH7C,YAAO,GAAG,CAAC,CAAC;QACZ,0BAAqB,GAAG,CAAC,CAAC;QAGxB,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;IAC1B,CAAC;IACD,qCAAU,GAAV,cAAc,CAAC;IACf,+CAAoB,GAApB,UAAqB,SAAqB;QACxC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;IAC7C,CAAC;IACD,sBAAI,+CAAiB;aAArB;YACE,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC;QACrC,CAAC;;;OAAA;IAfM,+BAAc,GAA6B;QAChD,YAAY,EAAE,CAAC;KAChB,CAAC;IAcJ,uBAAC;CAAA,AAjBD,IAiBC;AAjBY,4CAAgB","sourcesContent":["// tslint:disable no-empty\n\nexport class MockAnalyserNode {\n  static defaultOptions: MockAnalyserNode.Options = {\n    volumeValues: 0,\n  };\n  fftSize = 0;\n  smoothingTimeConstant = 0;\n  private _options: MockAnalyserNode.Options;\n  constructor(options: MockAnalyserNode.Options) {\n    this._options = options;\n  }\n  disconnect() {}\n  getByteFrequencyData(byteArray: Uint8Array) {\n    byteArray.fill(this._options.volumeValues);\n  }\n  get frequencyBinCount() {\n    return Math.ceil(this.fftSize / 2);\n  }\n}\n\nexport declare namespace MockAnalyserNode {\n  export interface Options {\n    volumeValues: number;\n  }\n}\n"]}