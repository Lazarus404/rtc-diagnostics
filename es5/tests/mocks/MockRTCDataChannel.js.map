{"version":3,"file":"MockRTCDataChannel.js","sourceRoot":"","sources":["../../../tests/mocks/MockRTCDataChannel.ts"],"names":[],"mappings":";AAAA,0BAA0B;;AAEb,QAAA,yBAAyB,GAAG,UAAC,OAAmC,IAAK;IAAA;IAWlF,CAAC;IAVC,sBAAI,8BAAS;aAAb,UAAc,QAAgC;YAC5C,UAAU,CAAC,cAAM,OAAA,OAAO,CAAC,SAAS,IAAI,QAAQ,CAAC,EAAE,IAAI,EAAE,cAAc,EAAE,CAAC,EAAvD,CAAuD,EAAE,EAAE,CAAC,CAAC;QAChF,CAAC;;;OAAA;IACD,sBAAI,2BAAM;aAAV,UAAW,QAAgC;YACzC,UAAU,CAAC,cAAM,OAAA,OAAO,CAAC,MAAM,IAAI,QAAQ,EAAE,EAA5B,CAA4B,EAAE,CAAC,CAAC,CAAC;QACpD,CAAC;;;OAAA;IACD,sBAAI,4BAAO;aAAX,UAAY,QAAgC;YAC1C,UAAU,CAAC,cAAM,OAAA,OAAO,CAAC,OAAO,IAAI,QAAQ,EAAE,EAA7B,CAA6B,EAAE,EAAE,CAAC,CAAC;QACtD,CAAC;;;OAAA;IACD,sBAAI,GAAJ,cAAQ,CAAC;IACX,cAAC;AAAD,CAAC,AAXiF,KAAA,CAWjF,CAAC","sourcesContent":["// tslint:disable no-empty\n\nexport const mockRTCDataChannelFactory = (options: MockRTCDataChannel.Options) => class {\n  set onmessage(listener: (...args: any) => void) {\n    setTimeout(() => options.doMessage && listener({ data: 'Ahoy, world!' }), 10);\n  }\n  set onopen(listener: (...args: any) => void) {\n    setTimeout(() => options.doOpen && listener(), 5);\n  }\n  set onclose(listener: (...args: any) => void) {\n    setTimeout(() => options.doClose && listener(), 20);\n  }\n  send() {}\n};\n\nexport namespace MockRTCDataChannel {\n  export interface Options {\n    doClose: boolean;\n    doMessage: boolean;\n    doOpen: boolean;\n  }\n}\n"]}