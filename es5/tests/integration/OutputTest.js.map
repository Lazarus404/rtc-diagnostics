{"version":3,"file":"OutputTest.js","sourceRoot":"","sources":["../../../tests/integration/OutputTest.ts"],"names":[],"mappings":"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","sourcesContent":["/* tslint:disable only-arrow-functions */\n\nimport * as assert from 'assert';\n\nimport {\n  INCOMING_SOUND_URL,\n} from '../../lib/constants';\n\nimport {\n  OutputTest,\n  testOutputDevice,\n} from '../../lib/OutputTest';\n\nconst suiteTimeout = 10000;\nconst defaultTestDuration = 5000;\nconst defaultTestPollIntervalMs = 10;\n\ndescribe('testOutputDevice', function() {\n  this.timeout(suiteTimeout);\n  describe('when not given a testURI', function() {\n    describe('when allowed to time out', function() {\n      let outputTestReport: OutputTest.Report;\n      const outputTestEvents: OutputTest.Events[] = [];\n\n      before(async function() {\n        outputTestReport = await new Promise(resolve => {\n          const test = testOutputDevice({\n            duration: defaultTestDuration,\n            passOnTimeout: false,\n            pollIntervalMs: defaultTestPollIntervalMs,\n          });\n          test.on(OutputTest.Events.Volume, () => {\n            outputTestEvents.push(OutputTest.Events.Volume);\n          });\n          test.on(OutputTest.Events.Error, () => {\n            outputTestEvents.push(OutputTest.Events.Error);\n          });\n          test.on(OutputTest.Events.End, (_, report) => {\n            outputTestEvents.push(OutputTest.Events.End);\n            setTimeout(() => resolve(report), defaultTestPollIntervalMs * 3);\n          });\n        });\n      });\n\n      it('should have failed', function() {\n        assert.equal(outputTestReport.didPass, false);\n      });\n\n      it('should end with an `end` event', function() {\n        assert.equal(\n          outputTestEvents[outputTestEvents.length - 1],\n          OutputTest.Events.End,\n        );\n      });\n    });\n\n    describe('when stopped with `didPass` set to `true`', function() {\n      let outputTestReport: OutputTest.Report;\n      const outputTestEvents: OutputTest.Events[] = [];\n\n      before(async function() {\n        outputTestReport = await new Promise(resolve => {\n          let timeoutId: any;\n          const test = testOutputDevice({\n            duration: Infinity,\n            pollIntervalMs: defaultTestPollIntervalMs,\n          });\n          test.on(OutputTest.Events.Volume, () => {\n            outputTestEvents.push(OutputTest.Events.Volume);\n          });\n          test.on(OutputTest.Events.End, (_, report) => {\n            outputTestEvents.push(OutputTest.Events.End);\n            clearTimeout(timeoutId);\n            setTimeout(() => resolve(report), defaultTestPollIntervalMs * 3);\n          });\n          timeoutId = setTimeout(() => test.stop(true), defaultTestDuration);\n        });\n      });\n\n      it('should pass', function() {\n        assert(outputTestReport.didPass);\n      });\n\n      it('should have some amount of `volume` events', function() {\n        assert(\n          outputTestEvents.filter(e => e === OutputTest.Events.Volume).length\n            > 0,\n        );\n      });\n\n      it('should end with an `end` event', function() {\n        assert.equal(\n          outputTestEvents[outputTestEvents.length - 1],\n          OutputTest.Events.End,\n        );\n      });\n\n      it('should not have more than 1 `end` event', function() {\n        assert.equal(\n          outputTestEvents.filter(e => e === OutputTest.Events.End).length,\n          1,\n        );\n      });\n    });\n  });\n\n  describe('when stopped with `didPass` set to `false`', function() {\n    let outputTestReport: OutputTest.Report;\n    const outputTestEvents: OutputTest.Events[] = [];\n\n    before(async function() {\n      outputTestReport = await new Promise(resolve => {\n        let timeoutId: any;\n        const test = testOutputDevice({\n          duration: Infinity,\n          pollIntervalMs: defaultTestPollIntervalMs,\n        });\n        test.on(OutputTest.Events.Volume, () => {\n          outputTestEvents.push(OutputTest.Events.Volume);\n        });\n        test.on(OutputTest.Events.End, (_, report) => {\n          outputTestEvents.push(OutputTest.Events.End);\n          clearTimeout(timeoutId);\n          setTimeout(() => resolve(report), defaultTestPollIntervalMs * 3);\n        });\n        timeoutId = setTimeout(() => test.stop(false), defaultTestDuration);\n      });\n    });\n\n    it('should not pass', function() {\n      assert.equal(outputTestReport.didPass, false);\n    });\n  });\n\n  describe('when given a valid `testURI`', function() {\n    let outputTestReport: OutputTest.Report;\n    const outputTestEvents: OutputTest.Events[] = [];\n\n    before(async function() {\n      outputTestReport = await new Promise(resolve => {\n        let timeoutId: any;\n        const test = testOutputDevice({\n          duration: Infinity,\n          pollIntervalMs: defaultTestPollIntervalMs,\n          testURI: INCOMING_SOUND_URL,\n        });\n        test.on(OutputTest.Events.Volume, () => {\n          outputTestEvents.push(OutputTest.Events.Volume);\n        });\n        test.on(OutputTest.Events.End, (_, report) => {\n          outputTestEvents.push(OutputTest.Events.End);\n          clearTimeout(timeoutId);\n          setTimeout(() => resolve(report), defaultTestPollIntervalMs * 3);\n        });\n        test.on(OutputTest.Events.Error, () => {\n          outputTestEvents.push(OutputTest.Events.Error);\n        });\n        timeoutId = setTimeout(() => test.stop(true), defaultTestDuration);\n      });\n    });\n\n    it('should not have any errors', function() {\n      assert.equal(outputTestReport.errors.length, 0);\n    });\n\n    it('should load the audio and pass', function() {\n      assert(outputTestReport.didPass);\n    });\n  });\n\n  describe('when given an invalid `testURI`', function() {\n    let outputTestReport: OutputTest.Report;\n    const outputTestEvents: OutputTest.Events[] = [];\n\n    before(async function() {\n      outputTestReport = await new Promise(resolve => {\n        const test = testOutputDevice({\n          duration: Infinity,\n          pollIntervalMs: defaultTestPollIntervalMs,\n          testURI: '',\n        });\n        test.on(OutputTest.Events.Volume, () => {\n          outputTestEvents.push(OutputTest.Events.Volume);\n        });\n        test.on(OutputTest.Events.End, (_, report) => {\n          outputTestEvents.push(OutputTest.Events.End);\n          setTimeout(() => resolve(report), defaultTestPollIntervalMs * 3);\n        });\n        test.on(OutputTest.Events.Error, () => {\n          outputTestEvents.push(OutputTest.Events.Error);\n        });\n      });\n    });\n\n    it('should not have a \"no supported source was found\" error', function() {\n      assert.equal(outputTestReport.errors.length, 1);\n      const error = outputTestReport.errors[0].domError;\n      assert(error);\n      assert.equal(error!.name, 'NotSupportedError');\n    });\n  });\n});\n"]}