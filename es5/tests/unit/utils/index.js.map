{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../tests/unit/utils/index.ts"],"names":[],"mappings":";AAAA,sCAAsC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEtC,+BAAiC;AAEjC,4CAAoD;AAEpD,QAAQ,CAAC,gBAAgB,EAAE;IACzB,EAAE,CAAC,wCAAwC,EAAE;;;;4BAC3C,qBAAM,MAAM,CAAC,OAAO,CAAC,cAAM,OAAA,sBAAc,CAAC,IAAI,OAAO,CAAC;4BACpD,aAAa;wBACf,CAAC,CAAC,EAAE,CAAC,CAAC,EAFqB,CAErB,CAAC,EAAA;;wBAFP,SAEO,CAAC;;;;;KACT,CAAC,CAAC;IACH,EAAE,CAAC,sDAAsD,EAAE;;;;4BACzD,qBAAM,OAAO,CAAC,GAAG,CAAC;4BAChB,IAAI,OAAO,CAAC,UAAA,OAAO,IAAI,OAAA,UAAU,CAAC,OAAO,EAAE,CAAC,CAAC,EAAtB,CAAsB,CAAC;4BAC9C,MAAM,CAAC,OAAO,CAAC,cAAM,OAAA,sBAAc,CAAC,IAAI,OAAO,CAAC,UAAA,OAAO;gCACrD,OAAA,UAAU,CAAC,OAAO,EAAE,CAAC,CAAC;4BAAtB,CAAsB,CAAC,EAAE,CAAC,CAAC,EADR,CACQ,CAAC;yBAC/B,CAAC,EAAA;;wBAJF,SAIE,CAAC;;;;;KACJ,CAAC,CAAC;IACH,EAAE,CAAC,sCAAsC,EAAE;;;;4BACzC,qBAAM,MAAM,CAAC,OAAO,CAAC,sBAAc,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,CAAC,EAAA;;wBAAzD,SAAyD,CAAC;;;;;KAC3D,CAAC,CAAC;IACH,EAAE,CAAC,wDAAwD,EAAE;;;;4BAC3D,qBAAM,sBAAc,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,EAAA;;wBAA1C,SAA0C,CAAC;;;;;KAC5C,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// tslint:disable only-arrow-functions\n\nimport * as assert from 'assert';\n\nimport { waitForPromise } from '../../../lib/utils';\n\ndescribe('waitForPromise', function() {\n  it('should reject if the promise times out', async function() {\n    await assert.rejects(() => waitForPromise(new Promise(() => {\n      // do nothing\n    }), 1));\n  });\n  it('should reject if the promise resolves after time out', async function() {\n    await Promise.all([\n      new Promise(resolve => setTimeout(resolve, 3)),\n      assert.rejects(() => waitForPromise(new Promise(resolve =>\n        setTimeout(resolve, 2)), 1)),\n    ]);\n  });\n  it('should reject if the promise rejects', async function() {\n    await assert.rejects(waitForPromise(Promise.reject(), 1));\n  });\n  it('should resolve if the promise resolves before time out', async function() {\n    await waitForPromise(Promise.resolve(), 1);\n  });\n});\n"]}