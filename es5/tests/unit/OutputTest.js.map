{"version":3,"file":"OutputTest.js","sourceRoot":"","sources":["../../../tests/unit/OutputTest.ts"],"names":[],"mappings":"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","sourcesContent":["// tslint:disable only-arrow-functions\n\nimport * as assert from 'assert';\nimport { DiagnosticError } from '../../lib/errors';\nimport {\n  OutputTest,\n  testOutputDevice,\n} from '../../lib/OutputTest';\nimport { AudioElement } from '../../lib/types';\nimport { mockAudioContextFactory } from '../mocks/MockAudioContext';\nimport { mockAudioElementFactory } from '../mocks/MockAudioElement';\nimport { mockEnumerateDevicesFactory } from '../mocks/mockEnumerateDevices';\n\nconst defaultDuration = 100;\nconst defaultPollIntervalMs = 1;\n\ndescribe('testOutputDevice', function() {\n  const audioElementFactory: (new () => AudioElement) = mockAudioElementFactory({\n    supportSetSinkId: true,\n  }) as any;\n\n  const volumeValues = 100;\n  describe(`with volume values of ${volumeValues}`, function() {\n    let report: OutputTest.Report;\n\n    before(async function() {\n      report = await new Promise(resolve => {\n        testOutputDevice({\n          audioContextFactory: mockAudioContextFactory({\n            analyserNodeOptions: { volumeValues },\n          }) as any,\n          audioElementFactory,\n          duration: defaultDuration,\n          enumerateDevices: mockEnumerateDevicesFactory({\n            devices: [{ deviceId: 'default', kind: 'audiooutput' } as any],\n          }),\n          pollIntervalMs: defaultPollIntervalMs,\n        }).on(OutputTest.Events.End, (_p, r) => resolve(r));\n      });\n    });\n\n    it('should pass', function() {\n      assert(report.didPass);\n    });\n\n    // it('both start and end timestamps should be set', function() {\n    //   assert(report.startTime);\n    //   assert(report.endTime);\n    // });\n\n    it(`all volume values should be ${volumeValues}`, function() {\n      assert(report.values.every(v => v === volumeValues));\n    });\n  });\n\n  describe('with volume values of 0', function() {\n    let report: OutputTest.Report;\n\n    before(async function() {\n      const audioContextFactory: typeof AudioContext = mockAudioContextFactory({\n        analyserNodeOptions: { volumeValues: 0 },\n      }) as any;\n\n      report = await new Promise(resolve => {\n        testOutputDevice({\n          audioContextFactory,\n          audioElementFactory,\n          duration: defaultDuration,\n          enumerateDevices: mockEnumerateDevicesFactory({\n            devices: [{ deviceId: 'default', kind: 'audiooutput' } as any],\n          }),\n          pollIntervalMs: defaultPollIntervalMs,\n        }).on(OutputTest.Events.End, (_p, r) => resolve(r));\n      });\n    });\n\n    it('should not pass', function() {\n      assert(!report.didPass);\n    });\n\n    // it('both start and end timestamps should be set', function() {\n    //   assert(report.startTime);\n    //   assert(report.endTime);\n    // });\n\n    it('all volume values should be 0', function() {\n      assert(report.values.every(v => v === 0));\n    });\n  });\n\n  it('should report a failure if allowed to timeout and `passOnTimeout === false`', async function() {\n    const result: { error?: DiagnosticError, report?: OutputTest.Report } = {};\n    await new Promise(resolve => {\n      const test = testOutputDevice({\n        audioContextFactory: mockAudioContextFactory() as any,\n        audioElementFactory,\n        duration: defaultDuration,\n        enumerateDevices: mockEnumerateDevicesFactory({\n          devices: [{ deviceId: 'default', kind: 'audiooutput' } as any],\n        }),\n        passOnTimeout: false,\n        pollIntervalMs: defaultPollIntervalMs,\n      });\n      test.on(OutputTest.Events.Error, err => {\n        result['error'] = err;\n        if (result.error && result.report) {\n          resolve(result);\n        }\n      });\n      test.on(OutputTest.Events.End, (_, r) => {\n        result['report'] = r;\n        if (result.error && result.report) {\n          resolve(result);\n        }\n      });\n    });\n    assert(result.report);\n    assert(result.error);\n    assert.equal(result.error!.message, 'Test timed out.');\n    assert.equal(result.report!.didPass, false);\n    assert.equal(result.report!.errors.length, 1);\n    assert.equal(result.error, result.report!.errors[0]);\n  });\n\n  describe('should immediately end and report an error', function() {\n    // not providing the mock object here results in the test resorting to the\n    // global\n    // because these are unit tests, and node does not have these globals,\n    // they are null and are essentially \"not supported\"\n\n    it('when AudioContext is not supported', async function() {\n      const report: OutputTest.Report = await new Promise(resolve => {\n        const test = testOutputDevice({\n          audioElementFactory,\n          enumerateDevices: mockEnumerateDevicesFactory({\n            devices: [{ deviceId: 'default', kind: 'audiooutput' } as any],\n          }),\n        });\n        test.on(OutputTest.Events.Error, () => {\n          // do nothing, prevent rejection\n        });\n        test.on(OutputTest.Events.End, (_, r) => resolve(r));\n      });\n      assert(report);\n      assert.equal(report.didPass, false);\n      assert.equal(report.errors.length, 1);\n      const [error] = report.errors;\n      assert(error instanceof DiagnosticError);\n      assert.equal(error.name, 'UnsupportedError');\n    });\n    it('when Audio is not supported', async function() {\n      const report: OutputTest.Report = await new Promise(resolve => {\n        const test = testOutputDevice({\n          audioContextFactory: mockAudioContextFactory() as any,\n          enumerateDevices: mockEnumerateDevicesFactory({\n            devices: [{ deviceId: 'default', kind: 'audiooutput' } as any],\n          }),\n        });\n        test.on(OutputTest.Events.Error, () => {\n          // do nothing, prevent rejection\n        });\n        test.on(OutputTest.Events.End, (_, r) => resolve(r));\n      });\n      assert(report);\n      assert.equal(report.didPass, false);\n      assert.equal(report.errors.length, 1);\n      const [error] = report.errors;\n      assert(error instanceof DiagnosticError);\n      assert.equal(error.name, 'UnsupportedError');\n    });\n    it('when neither AudioContext or Audio is supported', async function() {\n      const report: OutputTest.Report = await new Promise(resolve => {\n        const test = testOutputDevice({\n          enumerateDevices: mockEnumerateDevicesFactory({\n            devices: [{ deviceId: 'default', kind: 'audiooutput' } as any],\n          }),\n        });\n        test.on(OutputTest.Events.Error, () => {\n          // do nothing, prevent rejection\n        });\n        test.on(OutputTest.Events.End, (_, r) => resolve(r));\n      });\n      assert(report);\n      assert.equal(report.didPass, false);\n      assert.equal(report.errors.length, 1);\n      const [error] = report.errors;\n      assert(error instanceof DiagnosticError);\n      assert.equal(error.name, 'UnsupportedError');\n    });\n  });\n\n  it('should throw if stopped twice', function() {\n    const test = testOutputDevice({\n      audioContextFactory: mockAudioContextFactory({\n        analyserNodeOptions: { volumeValues: 100 },\n      }) as any,\n      audioElementFactory,\n      debug: false, // prevent console warnings\n      enumerateDevices: mockEnumerateDevicesFactory({\n        devices: [{ deviceId: 'default', kind: 'audiooutput' } as any],\n      }),\n    });\n    const report = test.stop(false);\n    assert(report);\n    const shouldBeUndefined = test.stop(false);\n    assert.equal(shouldBeUndefined, undefined);\n  });\n\n  it('should report an error if the audio context throws', async function() {\n    await assert.rejects(() => new Promise((_, reject) => {\n      const test = testOutputDevice({\n        audioContextFactory: mockAudioContextFactory({\n          analyserNodeOptions: { volumeValues: 100 },\n          doThrow: { createAnalyser: true },\n        }) as any,\n        audioElementFactory,\n        duration: defaultDuration,\n        enumerateDevices: mockEnumerateDevicesFactory({\n          devices: [{ deviceId: 'default', kind: 'audiooutput' } as any],\n        }),\n        pollIntervalMs: defaultPollIntervalMs,\n      });\n      test.on(OutputTest.Events.Error, err => reject(err));\n    }));\n  });\n\n  it('should allow `deviceId` if `setSinkId` is supported', async function() {\n    const report = await new Promise(resolve => {\n      const test = testOutputDevice({\n        audioContextFactory: mockAudioContextFactory({\n          analyserNodeOptions: { volumeValues: 100 },\n        }) as any,\n        audioElementFactory,\n        deviceId: 'foobar',\n        duration: defaultDuration,\n        enumerateDevices: mockEnumerateDevicesFactory({\n          devices: [{ deviceId: 'foobar', kind: 'audiooutput' } as any],\n        }),\n        pollIntervalMs: defaultPollIntervalMs,\n      });\n      test.on(OutputTest.Events.End, (_, r) => resolve(r));\n      test.stop(true);\n    });\n    assert(report);\n  });\n\n  it('should not allow `deviceId` if `setSinkId` is unsupported', async function() {\n    await assert.rejects(() => new Promise((_, reject) => {\n      const test = testOutputDevice({\n        audioContextFactory: mockAudioContextFactory() as any,\n        audioElementFactory: mockAudioElementFactory({ supportSetSinkId: false }) as any,\n        deviceId: 'foobar',\n        enumerateDevices: mockEnumerateDevicesFactory({\n          devices: [{ deviceId: 'foobar', kind: 'audiooutput' } as any],\n        }),\n      });\n      test.on(OutputTest.Events.Error, err => reject(err));\n    }));\n  });\n});\n"]}