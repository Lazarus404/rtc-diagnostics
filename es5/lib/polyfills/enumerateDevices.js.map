{"version":3,"file":"enumerateDevices.js","sourceRoot":"","sources":["../../../lib/polyfills/enumerateDevices.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,oCAA6C;AAE7C;;;GAGG;AACU,QAAA,kCAAkC,GAC7C,mDAAmD,CAAC;AAEtD;;;GAGG;AACU,QAAA,gCAAgC,GAC3C,IAAI,yBAAgB,CAAC,0CAAkC,CAAC,CAAC;AAE3D;;;;GAIG;AACU,QAAA,wBAAwB,GACnC,OAAO,SAAS,KAAK,WAAW;IAChC,SAAS,CAAC,YAAY;IACtB,SAAS,CAAC,YAAY,CAAC,gBAAgB;IACrC,CAAC,CAAC,SAAS,CAAC,YAAY,CAAC,gBAAgB,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC;IACtE,CAAC,CAAC,SAAS,CAAC;AAEhB;;;;GAIG;AACH,SAAsB,iBAAiB;;;;;;oBAI/B,gBAAgB,GAGjB,EAAE,CAAC;yBAEJ,gCAAwB,EAAxB,wBAAwB;0BACuC;oBAA3C,qBAAM,gCAAwB,EAAE,EAAA;;oBAAjC,KAAA,CAAC,SAAgC,CAAC,CAAC,OAAO,EAAE;;;yBAA5C,CAAA,cAA4C,CAAA;oBAAtD,MAAM;oBACf,gBAAgB,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC;;;oBADpB,IAA4C,CAAA;;wBAKnE,sBAAO,gBAAgB,EAAC;;;;CACzB;AAhBD,8CAgBC","sourcesContent":["import { UnsupportedError } from '../errors';\n\n/**\n * @internalapi\n * Common error message for when `enumerateDevices` is not supported.\n */\nexport const enumerateDevicesUnsupportedMessage: string =\n  'The function `enumerateDevices` is not supported.';\n\n/**\n * @internalapi\n * Common error that can be thrown when the polyfill is unable to work.\n */\nexport const EnumerateDevicesUnsupportedError: UnsupportedError =\n  new UnsupportedError(enumerateDevicesUnsupportedMessage);\n\n/**\n * @internalapi\n * Provide a polyfill for `navigator.mediaDevices.enumerateDevices` so that we\n * will not encounter a fatal-error upon trying to use it.\n */\nexport const enumerateDevicesPolyfill: typeof navigator.mediaDevices.enumerateDevices | undefined =\n  typeof navigator !== 'undefined' &&\n  navigator.mediaDevices &&\n  navigator.mediaDevices.enumerateDevices\n    ? navigator.mediaDevices.enumerateDevices.bind(navigator.mediaDevices)\n    : undefined;\n\n/**\n * @internalapi\n * Firefox does not have a device ID that is \"default\". To get that device ID,\n * we need to enumerate all the devices and grab the first of each \"kind\".\n */\nexport async function getDefaultDevices(): Promise<Partial<Record<\n  MediaDeviceKind,\n  MediaDeviceInfo\n>>> {\n  const defaultDeviceIds: Partial<Record<\n    MediaDeviceKind,\n    MediaDeviceInfo\n  >> = {};\n\n  if (enumerateDevicesPolyfill) {\n    for (const device of (await enumerateDevicesPolyfill()).reverse()) {\n      defaultDeviceIds[device.kind] = device;\n    }\n  }\n\n  return defaultDeviceIds;\n}\n"]}