{"version":3,"file":"AudioContext.js","sourceRoot":"","sources":["../../../lib/polyfills/AudioContext.ts"],"names":[],"mappings":";;AAAA,oCAA6C;AAkB7C;;;GAGG;AACU,QAAA,4BAA4B,GACvC,IAAI,yBAAgB,CAClB,gDAAgD,CACjD,CAAC;AAEJ;;;GAGG;AACU,QAAA,oBAAoB,GAC/B,OAAO,MAAM,KAAK,WAAW;IAC3B,CAAC,CAAC,MAAM,CAAC,YAAY,IAAI,MAAM,CAAC,kBAAkB;IAClD,CAAC,CAAC,SAAS,CAAC","sourcesContent":["import { UnsupportedError } from '../errors';\n\n/**\n * This file provides a cross-browser polyfill for AudioContext.\n *\n * Currently, Safari is the only browser that needs this as it still prefixes\n * `AudioContext` as `webkitAudioContext`.\n *\n * It is necessary to declare `AudioContext` in the `Window` global as it does\n * not exist in older typings.\n */\ndeclare global {\n  interface Window {\n    AudioContext: typeof AudioContext;\n    webkitAudioContext: typeof AudioContext;\n  }\n}\n\n/**\n * @internalapi\n * Common error that can be thrown when the polyfill is unable to work.\n */\nexport const AudioContextUnsupportedError: UnsupportedError =\n  new UnsupportedError(\n    'AudioContext is not supported by this browser.',\n  );\n\n/**\n * @internalapi\n * Attempts to polyfill `AudioContext`.\n */\nexport const AudioContextPolyfill: typeof window.AudioContext | undefined =\n  typeof window !== 'undefined'\n    ? window.AudioContext || window.webkitAudioContext\n    : undefined;\n"]}