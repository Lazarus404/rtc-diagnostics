{"version":3,"file":"getUserMedia.js","sourceRoot":"","sources":["../../../lib/polyfills/getUserMedia.ts"],"names":[],"mappings":";;AAAA,oCAA6C;AAE7C;;;GAGG;AACU,QAAA,4BAA4B,GACvC,IAAI,yBAAgB,CAClB,+CAA+C,CAChD,CAAC;AAEJ;;;;GAIG;AACU,QAAA,oBAAoB,GAC/B,OAAO,MAAM,KAAK,WAAW;IAC7B,MAAM,CAAC,SAAS,KAAK,SAAS;IAC9B,MAAM,CAAC,SAAS,CAAC,YAAY,KAAK,SAAS;IAC3C,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,YAAY,KAAK,SAAS;IACtD,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,YAAY,CAAC,IAAI,CAC/C,MAAM,CAAC,SAAS,CAAC,YAAY,CAC9B;IACD,CAAC,CAAC,SAAS,CAAC","sourcesContent":["import { UnsupportedError } from '../errors';\n\n/**\n * @internalapi\n * Common error that can be thrown when the polyfill is unable to work.\n */\nexport const GetUserMediaUnsupportedError: UnsupportedError =\n  new UnsupportedError(\n    'The function `getUserMedia` is not supported.',\n  );\n\n/**\n * @internalapi\n * This polyfill serves to rebind `getUserMedia` to the `navigator.mediaDevices`\n * scope.\n */\nexport const getUserMediaPolyfill: typeof window.navigator.mediaDevices.getUserMedia | undefined =\n  typeof window !== 'undefined' &&\n  window.navigator !== undefined &&\n  window.navigator.mediaDevices !== undefined &&\n  window.navigator.mediaDevices.getUserMedia !== undefined\n    ? window.navigator.mediaDevices.getUserMedia.bind(\n      window.navigator.mediaDevices,\n    )\n    : undefined;\n"]}