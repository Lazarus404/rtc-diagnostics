{"version":3,"file":"InvalidOptionError.js","sourceRoot":"","sources":["../../../lib/errors/InvalidOptionError.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,qDAAoD;AAEpD;;GAEG;AACH;IAAwC,sCAAe;IAKrD,4BACE,MAAc,EACd,MAAc,EACd,KAAiD;QAHnD,iBAqBC;QAhBC,IAAM,QAAQ,GACZ,CAAC,OAAO,QAAQ,KAAK,WAAW,IAAI,KAAK,YAAY,QAAQ,CAAC;YAC9D,CAAC,OAAO,YAAY,KAAK,WAAW,IAAI,KAAK,YAAY,YAAY,CAAC;YACpE,CAAC,CAAC,KAAK;YACP,CAAC,CAAC,SAAS,CAAC;QAEhB,QAAA,kBACE,QAAQ,EACR,cAAW,MAAM,kCAA2B,MAAM,QAAI,CACvD,SAAC;QAEF,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QAEnB,KAAI,CAAC,IAAI,GAAG,oBAAoB,CAAC;;IACnC,CAAC;IACH,yBAAC;AAAD,CAAC,AA3BD,CAAwC,iCAAe,GA2BtD;AA3BY,gDAAkB","sourcesContent":["import { DiagnosticError } from './DiagnosticError';\n\n/**\n * @internalapi\n */\nexport class InvalidOptionError extends DiagnosticError {\n  error: DiagnosticError | DOMError | DOMException | undefined;\n  option: string;\n  reason: string;\n\n  constructor(\n    option: string,\n    reason: string,\n    error?: DiagnosticError | DOMError | DOMException,\n  ) {\n    const domError: DOMError | DOMException | undefined =\n      (typeof DOMError !== 'undefined' && error instanceof DOMError) ||\n      (typeof DOMException !== 'undefined' && error instanceof DOMException)\n        ? error\n        : undefined;\n\n    super(\n      domError,\n      `Option \"${option}\" invalid with reason: \"${reason}\".`,\n    );\n\n    this.option = option;\n    this.reason = reason;\n    this.error = error;\n\n    this.name = 'InvalidOptionError';\n  }\n}\n"]}